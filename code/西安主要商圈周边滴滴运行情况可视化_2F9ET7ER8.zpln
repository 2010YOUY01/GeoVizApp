{
  "paragraphs": [
    {
      "title": "查询选项",
      "text": "%angular\n\n\u003cform class\u003d\"form-inline\"\u003e\n  \u003cdiv class\u003d\"form-group\" ng-model-options\u003d\"{\n  timezone:\u0027-0000\u0027\n}\"\u003e\n    \u003clabel for\u003d\"superheroId\"\u003e开始时间： \u003c/label\u003e\n    \u003cinput type\u003d\"datetime-local\" min\u003d\"2016-10-01T00:00:00\" max\u003d\"2016-10-31T23:59:59\" class\u003d\"form-control\" id\u003d\"from\" placeholder\u003d\"yyyy-MM-ddTHH:mm:ss\" ng-model\u003d\"startTime\"\u003e\u003c/input\u003e\n    \u003cbr\u003e\n    \u003clabel for\u003d\"superheroId\"\u003e结束时间： \u003c/label\u003e\n    \u003cinput type\u003d\"datetime-local\" min\u003d\"2016-10-01T00:00:00\" max\u003d\"2016-10-31T23:59:59\" class\u003d\"form-control\" id\u003d\"to\" placeholder\u003d\"yyyy-MM-ddTHH:mm:ss\" ng-model\u003d\"endTime\"\u003e\u003c/input\u003e\n    \u003cbr\u003e\u003cbr\u003e\n     \u003clabel for\u003d\"superheroId\"\u003e查询半径（米）： \u003c/label\u003e\n    \u003cinput type\u003d\"number\" min\u003d\"0\" max\u003d\"1000\" ng-model\u003d\"radius\"\u003e\u003c/input\u003e\n  \u003c/div\u003e\u003cbr\u003e\n  \u003cbutton type\u003d\"submit\" class\u003d\"btn btn-primary\" ng-click\u003d\"\n  z.angularBind(\u0027startTime\u0027,startTime,\u002720190227-203333_1886473378\u0027);\n  z.angularBind(\u0027endTime\u0027,endTime,\u002720190227-203333_1886473378\u0027);\n   z.angularBind(\u0027radius\u0027,radius,\u002720190227-203333_1886473378\u0027);\n  z.runParagraph(\u002720190227-203333_1886473378\u0027);\n  z.runParagraph(\u0027paragraph_1589598031135_1749808555\u0027);\n    z.runParagraph(\u0027paragraph_1589610220248_-661884882\u0027);\n    z.runParagraph(\u002720190227-203400_1171762279\u0027);\n    z.runParagraph(\u002720190227-203351_1519829707\u0027);\n  \"\u003e 执行 \u003c/button\u003e\n\u003c/form\u003e",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:32:25.097",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/text",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 107.4,
              "optionOpen": false
            }
          }
        },
        "enabled": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003cform class\u003d\"form-inline\"\u003e\n  \u003cdiv class\u003d\"form-group\" ng-model-options\u003d\"{\n  timezone:\u0027-0000\u0027\n}\"\u003e\n    \u003clabel for\u003d\"superheroId\"\u003e开始时间： \u003c/label\u003e\n    \u003cinput type\u003d\"datetime-local\" min\u003d\"2016-10-01T00:00:00\" max\u003d\"2016-10-31T23:59:59\" class\u003d\"form-control\" id\u003d\"from\" placeholder\u003d\"yyyy-MM-ddTHH:mm:ss\" ng-model\u003d\"startTime\"\u003e\u003c/input\u003e\n    \u003cbr\u003e\n    \u003clabel for\u003d\"superheroId\"\u003e结束时间： \u003c/label\u003e\n    \u003cinput type\u003d\"datetime-local\" min\u003d\"2016-10-01T00:00:00\" max\u003d\"2016-10-31T23:59:59\" class\u003d\"form-control\" id\u003d\"to\" placeholder\u003d\"yyyy-MM-ddTHH:mm:ss\" ng-model\u003d\"endTime\"\u003e\u003c/input\u003e\n    \u003cbr\u003e\u003cbr\u003e\n     \u003clabel for\u003d\"superheroId\"\u003e查询半径（米）： \u003c/label\u003e\n    \u003cinput type\u003d\"number\" min\u003d\"0\" max\u003d\"1000\" ng-model\u003d\"radius\"\u003e\u003c/input\u003e\n  \u003c/div\u003e\u003cbr\u003e\n  \u003cbutton type\u003d\"submit\" class\u003d\"btn btn-primary\" ng-click\u003d\"\n  z.angularBind(\u0027startTime\u0027,startTime,\u002720190227-203333_1886473378\u0027);\n  z.angularBind(\u0027endTime\u0027,endTime,\u002720190227-203333_1886473378\u0027);\n   z.angularBind(\u0027radius\u0027,radius,\u002720190227-203333_1886473378\u0027);\n  z.runParagraph(\u002720190227-203333_1886473378\u0027);\n  z.runParagraph(\u0027paragraph_1589598031135_1749808555\u0027);\n    z.runParagraph(\u0027paragraph_1589610220248_-661884882\u0027);\n    z.runParagraph(\u002720190227-203400_1171762279\u0027);\n    z.runParagraph(\u002720190227-203351_1519829707\u0027);\n  \"\u003e 执行 \u003c/button\u003e\n\u003c/form\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589381297576_-215378572",
      "id": "paragraph_1589168039542_-220357370",
      "dateCreated": "2020-05-13 22:48:17.577",
      "dateStarted": "2020-06-01 16:32:25.125",
      "dateFinished": "2020-06-01 16:32:25.948",
      "status": "FINISHED"
    },
    {
      "title": "各个商圈位置",
      "text": "%sql\nSELECT *\nFROM wktpoint",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:41:29.474",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "geospark-zeppelin",
              "height": 463.6,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "geom": "string",
                      "name": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "geospark-zeppelin": {
                  "geometry": {
                    "name": "geom",
                    "index": 0.0,
                    "aggr": "sum"
                  },
                  "info": {
                    "name": "name",
                    "index": 1.0,
                    "aggr": "sum"
                  }
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "keys": [
                {
                  "name": "geom",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [],
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "enabled": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "geom\tname\nPOINT (108.96294583294676 34.27006638793275)\t解放路\nPOINT (108.94715298626707 34.26988906313337)\t北大街\nPOINT (108.94702424023436 34.26130609581325)\t钟楼\nPOINT (108.94702424023436 34.25550677705698)\t南大街 \nPOINT (108.93903125736998 34.25944397281842)\t西大街\nPOINT (108.95420183155821 34.25962131964191)\t东大街\nPOINT (108.94694913838194 34.24480270326526)\t南门\nPOINT (108.93916000340269 34.24118411689473)\t小雁塔\nPOINT (108.94667018864439 34.22285820077161)\t小寨\nPOINT (108.96398653004454 34.22278723109942)\t大雁塔\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589381297589_1705012616",
      "id": "20190227-203351_1519829707",
      "dateCreated": "2020-05-13 22:48:17.589",
      "dateStarted": "2020-06-01 16:41:30.273",
      "dateFinished": "2020-06-01 16:41:35.776",
      "status": "FINISHED"
    },
    {
      "title": "所选时段各大商圈附近滴滴车辆数量图",
      "text": "%sql\nselect * from carsNearMalls order by carsNearMalls.carCount",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:41:29.455",
      "config": {
        "colWidth": 4.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 514.006,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "mall": "string",
                      "count(1)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {}
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "mall",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "carCount",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "mall\tcarCount\n西大街\t28\n小雁塔\t34\n东大街\t38\n大雁塔\t47\n南门\t47\n南大街 \t55\n解放路\t62\n北大街\t74\n钟楼\t77\n小寨\t95\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589598031135_1749808555",
      "id": "paragraph_1589598031135_1749808555",
      "dateCreated": "2020-05-16 11:00:31.135",
      "dateStarted": "2020-06-01 16:41:29.662",
      "dateFinished": "2020-06-01 16:41:40.443",
      "status": "FINISHED"
    },
    {
      "title": "所选时段滴滴车辆位置图",
      "text": "%sql\nSELECT *\nFROM images ",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:41:29.467",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "geospark-zeppelin",
              "height": 297.884,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "image0",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0.0,
                          "direction": "asc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "boundary1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "x2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "image": "string",
                      "boundary": "string",
                      "I am the map center!": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "zeppelin-leaflet": {},
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "geospark-zeppelin": {
                  "mapimage": {
                    "name": "image",
                    "index": 0.0,
                    "aggr": "sum"
                  },
                  "geometry": {
                    "name": "boundary",
                    "index": 1.0,
                    "aggr": "sum"
                  },
                  "info": {
                    "name": "name",
                    "index": 3.0,
                    "aggr": "sum"
                  }
                }
              },
              "keys": [
                {
                  "name": "image",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "boundary",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "image\tboundary\n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\tPOLYGON ((108.91135 34.20551, 108.91135 34.28009, 108.99857 34.28009, 108.99857 34.20551, 108.91135 34.20551))\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589381297588_-332066297",
      "id": "20190227-203400_1171762279",
      "dateCreated": "2020-05-13 22:48:17.588",
      "dateStarted": "2020-06-01 16:41:30.072",
      "dateFinished": "2020-06-01 16:42:06.248",
      "status": "FINISHED"
    },
    {
      "title": "所选时段全城滴滴轨迹热度图",
      "text": "%sql\nSELECT *\nFROM heatmap",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:41:29.461",
      "config": {
        "colWidth": 6.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "geospark-zeppelin",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "image": "string",
                      "boundary": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "geospark-zeppelin": {
                  "mapimage": {
                    "name": "image",
                    "index": 0.0,
                    "aggr": "sum"
                  },
                  "geometry": {
                    "name": "boundary",
                    "index": 1.0,
                    "aggr": "sum"
                  }
                }
              }
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "image\tboundary\\u003d\u003d\tPOLYGON ((108.91135 34.20551, 108.91135 34.28009, 108.99857 34.28009, 108.99857 34.20551, 108.91135 34.20551))\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589610220248_-661884882",
      "id": "paragraph_1589610220248_-661884882",
      "dateCreated": "2020-05-16 14:23:40.249",
      "dateStarted": "2020-06-01 16:41:29.871",
      "dateFinished": "2020-06-01 16:41:59.958",
      "status": "FINISHED"
    },
    {
      "text": "import org.datasyslab.geosparksql.utils.GeoSparkSQLRegistrator\nimport org.datasyslab.geosparkviz.sql.utils.GeoSparkVizRegistrator\nimport org.apache.spark.sql.types.{StructType, StructField, StringType, IntegerType}\nimport org.apache.spark.sql.types.TimestampType\nimport java.sql.Timestamp\n\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// So you don\u0027t need create them manually\n\nGeoSparkSQLRegistrator.registerAll(spark)\nGeoSparkVizRegistrator.registerAll(spark)\n\n//File Path\n//Files: order\txa1\txa15\txa3\txa30\txa7\nval directoryPath \u003d \"/Users/2010youy01/Desktop/grad/data/\"\n\n// Convert time from angular input string to Timestamp type.\ndef strToTimestamp(s: String): Long \u003d {\n  Timestamp.valueOf(s.replace(\"T\",\" \").replace(\"Z\", \"\")).getTime()/1000\n}\n\n// Get time string from angular input and convert to Timestamp\nval startTime \u003d strToTimestamp(z.angular(\"startTime\").toString)\nval endTime \u003d strToTimestamp(z.angular(\"endTime\").toString)\n\n// Get radius from angular input, and bind with Zeppelin context\nval radius \u003d z.angular(\"radius\")\nz.put(\"radius\", radius)\n\n//Read trajectory data.\nval pointdf \u003d spark.read\n    .format(\"csv\")\n    .option(\"delimiter\", \",\")\n    .option(\"header\", \"false\")\n    .load(directoryPath + \"xa30\")\n    .filter($\"_c2\".between(startTime, endTime))\n    .persist()\n\n//Read POI(malls) data.\nval mallsDF \u003d spark.read\n    .format(\"csv\")\n    .option(\"delimiter\", \",\")\n    .option(\"header\", \"false\")\n    .load(directoryPath + \"malls.csv\")\n    .persist()\n\npointdf.createOrReplaceTempView(\"pointtable\")\nmallsDF.createOrReplaceTempView(\"malls\")\n\n\n//Create shape.\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pointtable AS\n    |SELECT ST_Point(cast(pointtable._c3 as Decimal(24,20)),cast(pointtable._c4 as Decimal(24,20))) as position, pointtable._c0 as driverID\n    |FROM pointtable\n  \"\"\".stripMargin).persist()\n  \nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW malls AS\n    |SELECT ST_Point(cast(malls._c0 as Decimal(24,20)), cast(malls._c1 as Decimal(24, 20))) as location, malls._c2 as name\n    |FROM malls\n  \"\"\".stripMargin).persist()\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW wktpoint AS\n    |SELECT ST_AsText(location) as geom, malls.name as name\n    |FROM malls\n  \"\"\".stripMargin)\nspark.table(\"pointtable\").show()\nspark.table(\"malls\").show()\n\n/* Create image for scatter-plot of cars near the shopping district */\nspark.sql(\n  s\"\"\"\n    |CREATE OR REPLACE TEMP VIEW join AS\n    |SELECT malls.name as mall, pointtable.driverID as id, first(pointtable.position) as carPos\n    |FROM malls, pointtable\n    |WHERE ST_Distance(ST_Transform(malls.location, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027), ST_Transform(pointtable.position, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027)) \u003c ${radius}\n    |GROUP BY malls.name, pointtable.driverID\n  \"\"\".stripMargin)\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW carsNearMalls AS\n    |SELECT mall, count(*) as carCount\n    |FROM join\n    |GROUP BY join.mall\n  \"\"\".stripMargin)\nspark.table(\"join\").show()\nspark.table(\"carsNearMalls\").show()\n\n  \nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW boundtable AS\n    |SELECT ST_Envelope_Aggr(position) as bound FROM pointtable\n  \"\"\".stripMargin)\nval boundDF \u003d spark.sql(\"SELECT * FROM boundtable\")\n//z.show(boundDF)\n\nval pixelsDF \u003d spark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixels AS\n    |SELECT pixel, carPos FROM join\n    |LATERAL VIEW ST_Pixelize(ST_Transform(carPos, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027), 512, 512, (SELECT ST_Transform(bound, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027) FROM boundtable)) AS pixel\n  \"\"\".stripMargin)\n//pixelsDF.printSchema()\n//spark.table(\"pixels\").show()\n\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixelaggregates AS\n    |SELECT pixel, count(*) as weight\n    |FROM pixels\n    |GROUP BY pixel\n  \"\"\".stripMargin)\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW images AS\n    |SELECT ST_EncodeImage(ST_Render(pixel, ST_Colorize(weight, (SELECT max(weight) FROM pixelaggregates), \u0027white\u0027))) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary\n    |FROM pixelaggregates\n  \"\"\".stripMargin).persist()\n\n/* Create Heatmap for all cars in the city */\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixels AS\n    |SELECT pixel, position FROM pointtable\n    |LATERAL VIEW ST_Pixelize(ST_Transform(position, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027), 256, 256, (SELECT ST_Transform(bound, \u0027epsg:4326\u0027,\u0027epsg:3857\u0027) FROM boundtable)) AS pixel\n  \"\"\".stripMargin)\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pixelaggregates AS\n    |SELECT pixel, count(*) as weight\n    |FROM pixels\n    |GROUP BY pixel\n  \"\"\".stripMargin)\n\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW heatmap AS\n    |SELECT ST_EncodeImage(ST_Render(pixel, ST_Colorize(weight, (SELECT max(weight) FROM pixelaggregates)))) AS image, (SELECT ST_AsText(bound) FROM boundtable) AS boundary\n    |FROM pixelaggregates\n  \"\"\".stripMargin).persist()\n\n/*\nspark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW wktpoint AS\n    |SELECT ST_AsText(shape) as geom\n    |FROM pointtable\n  \"\"\".stripMargin)\n  \n\n  spark.sql(\n  \"\"\"\n    |CREATE OR REPLACE TEMP VIEW pointtable AS\n    |SELECT *\n    |FROM pointtable\n    |WHERE ST_Contains(ST_PolygonFromEnvelope(-126.790180,24.863836,-64.630926,50.000),shape)\n  \"\"\".stripMargin)\n */\n \n  ",
      "user": "anonymous",
      "dateUpdated": "2020-06-01 16:41:29.450",
      "config": {
        "lineNumbers": true,
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "_c0",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "_c1",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {
          "name": "5",
          "time": "1478930901"
        },
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "java.lang.NullPointerException\n  ... 45 elided\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589381297584_-1241981637",
      "id": "20190227-203333_1886473378",
      "dateCreated": "2020-05-13 22:48:17.584",
      "dateStarted": "2020-06-01 16:41:29.455",
      "dateFinished": "2020-06-01 16:41:30.597",
      "status": "ERROR"
    },
    {
      "text": "%sql\n",
      "user": "anonymous",
      "dateUpdated": "2020-05-16 15:04:58.741",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1589612698741_-1411877821",
      "id": "paragraph_1589612698741_-1411877821",
      "dateCreated": "2020-05-16 15:04:58.741",
      "status": "READY"
    }
  ],
  "name": "西安主要商圈周边滴滴运行情况可视化",
  "id": "2F9ET7ER8",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "spark-shared_process": [
      {
        "name": "startTime",
        "object": "2016-10-07T14:00:00.000Z",
        "noteId": "2F9ET7ER8",
        "paragraphId": "20190227-203333_1886473378"
      },
      {
        "name": "endTime",
        "object": "2016-10-07T14:05:00.000Z",
        "noteId": "2F9ET7ER8",
        "paragraphId": "20190227-203333_1886473378"
      },
      {
        "name": "radius",
        "object": 600.0,
        "noteId": "2F9ET7ER8",
        "paragraphId": "20190227-203333_1886473378"
      }
    ]
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "report",
    "personalizedMode": "false"
  },
  "info": {}
}